{
  "_args": [
    [
      {
        "raw": "2d-polygon-self-intersections@^1.2.2",
        "scope": null,
        "escapedName": "2d-polygon-self-intersections",
        "name": "2d-polygon-self-intersections",
        "rawSpec": "^1.2.2",
        "spec": ">=1.2.2 <2.0.0",
        "type": "range"
      },
      "E:\\Docs\\Portfolio 2\\Website Building\\procedural house gen\\node_modules\\polygon"
    ]
  ],
  "_from": "2d-polygon-self-intersections@>=1.2.2 <2.0.0",
  "_id": "2d-polygon-self-intersections@1.3.1",
  "_inCache": true,
  "_location": "/2d-polygon-self-intersections",
  "_nodeVersion": "0.10.37",
  "_npmUser": {
    "name": "tmpvar",
    "email": "tmpvar@gmail.com"
  },
  "_npmVersion": "2.7.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "2d-polygon-self-intersections@^1.2.2",
    "scope": null,
    "escapedName": "2d-polygon-self-intersections",
    "name": "2d-polygon-self-intersections",
    "rawSpec": "^1.2.2",
    "spec": ">=1.2.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/polygon"
  ],
  "_resolved": "https://registry.npmjs.org/2d-polygon-self-intersections/-/2d-polygon-self-intersections-1.3.1.tgz",
  "_shasum": "a27a5537e761800258a9d4975c6642319a534a88",
  "_shrinkwrap": null,
  "_spec": "2d-polygon-self-intersections@^1.2.2",
  "_where": "E:\\Docs\\Portfolio 2\\Website Building\\procedural house gen\\node_modules\\polygon",
  "author": {
    "name": "Elijah Insua",
    "email": "tmpvar@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/tmpvar/2d-polygon-self-intersections/issues"
  },
  "dependencies": {
    "exact-segment-intersect": "^2.0.0",
    "robust-estimate-float": "^1.0.0"
  },
  "description": "This library may not be fast, but it is robust. Robust in the fact that it will find all of the self-intersections in a polygon - minus of course shared endpoints.",
  "devDependencies": {
    "benchmark": "^1.0.0",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a27a5537e761800258a9d4975c6642319a534a88",
    "tarball": "https://registry.npmjs.org/2d-polygon-self-intersections/-/2d-polygon-self-intersections-1.3.1.tgz"
  },
  "gitHead": "43145c3d648d5a0bade53fbb7b7291798f0c8e94",
  "homepage": "https://github.com/tmpvar/2d-polygon-self-intersections",
  "keywords": [
    "2d",
    "polygon",
    "math",
    "intersections",
    "self-intersections",
    "robust"
  ],
  "license": "MIT",
  "main": "intersections.js",
  "maintainers": [
    {
      "name": "tmpvar",
      "email": "tmpvar@gmail.com"
    }
  ],
  "name": "2d-polygon-self-intersections",
  "optionalDependencies": {},
  "readme": "# 2d-polygon-self-intersections\n\nfind self-intersections in a 2d polygon\n\nThis library may not be fast, but it is robust. Robust in the fact that it will find all of the self-intersections in a polygon - minus of course shared endpoints.\n\nYou can expect a time complexity of O(n^2)\n\nWhy wouldn't we use [Bentleyâ€“Ottmann](http://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm)?  We may in the future, but that is going to take some time and having a functional mechanism for detecting self-intersections is far superior to a non-existant one. The api won't have to change for this to happen.\n\n## install\n\n`npm install 2d-polygon-self-intersections`\n\n## use\n\n```javascript\nvar isects = require('2d-polygon-self-intersections');\n\nvar poly = [\n  [0, 0],\n  [10, 0],\n  [0, 10],\n  [10, 10]\n];\n\nvar r = isects(poly);\nconsole.log(r);\n// outputs: [ [ 5, 5 ] ]\n```\n\n### api\n\n__isects__(`polygon`[, `filterFn`])\n\n* `polygon` - an array of 2 component arrays (i.e. a triangle `[[0, 0], [10, 0], [10, 10]]`) or an array of objects: `[{x:0, y:0}, {x:10, y:0}, {x:10, y:10}]`\n* `filterFn` - a filter function called whenever an intersection is found: `filterFn`(`isect`, `start0`, `end0`, `start1`, `end1`, `unique`)\n * `isect` - current intersection (e.g. `[5, 5]`) - mutations in this array get collected\n * `index0` - index of the segment (e.g `1`)\n * `start0` - start of the first segment (e.g `[0, 5]`)\n * `end0` - start of the first segment (e.g `[10, 5]`)\n * `index0` - index of the segment (e.g `3`)\n * `start1` - start of the first segment (e.g `[5, 0]`)\n * `end1` - start of the first segment (e.g `[5, 10]`)\n * `unique` - boolean representing whether or not this intersection point has been seen before\n * __return__ `true` to collect and `false` to discard\n\n__returns__ an empty array if no interesections or an array of 2 component arrays representing the intersection points. \n\n_NOTE_: this library assumes the polygon is closed, so manually adding the start point as the end point has no effect.\n\nAlso note that there are 2 intersections per crossing, this library by default will only report one - all intersections will be unique.  This behavior can be changed with the `filterFn`.\n\n## license\n\n[MIT](LICENSE.txt)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tmpvar/2d-polygon-self-intersections.git"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "version": "1.3.1"
}
